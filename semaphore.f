\ include gpio.f
\ include jonesforth.f

100000 CONSTANT WAIT_TIME

DECIMAL

20 CONSTANT RED_CAR_LED
21 CONSTANT YELLOW_CAR_LED
26 CONSTANT GREEN_CAR_LED

19 CONSTANT RED_PED_LED
13 CONSTANT YELLOW_PED_LED
6  CONSTANT GREEN_PED_LED

5  CONSTANT BUTTON

: DELAY BEGIN 1 - DUP 0 = UNTIL DROP ;

: RED RED_CAR_LED RED_PED_LED ;
: YELLOW YELLOW_CAR_LED YELLOW_PED_LED ;
: GREEN GREEN_CAR_LED GREEN_PED_LED ;

: CAR DROP ;
: PEDESTRIAN SWAP DROP ;

\ INIT_OUTPUT ( -- ) set the output state to the semaphore's GPIO.
: INIT_OUTPUT 
    RED CAR GPIO MODE OUTPUT 
    YELLOW CAR GPIO MODE OUTPUT 
    GREEN CAR GPIO MODE OUTPUT 
    RED PEDESTRIAN GPIO MODE OUTPUT 
    YELLOW PEDESTRIAN GPIO MODE OUTPUT 
    GREEN PEDESTRIAN GPIO MODE OUTPUT 
;

\ INIT_STATE ( -- ) initializes the state of the semaphore's LEDs.
: INIT_STATE  
    RED CAR GPIO ON 
    YELLOW CAR GPIO OFF 
    GREEN CAR GPIO OFF 
    RED PEDESTRIAN GPIO OFF
    YELLOW PEDESTRIAN GPIO OFF 
    GREEN PEDESTRIAN GPIO ON 
;

: SEMAPHORE_ROUTINE 
    ." PEDESTRIAN YELLOW " CR
    GREEN PEDESTRIAN GPIO OFF YELLOW PEDESTRIAN GPIO ON WAIT_TIME DELAY 
    ." PEDESTRIAN RED " CR 
    RED PEDESTRIAN GPIO ON YELLOW PEDESTRIAN GPIO OFF RED CAR GPIO OFF GREEN CAR GPIO ON WAIT_TIME DELAY  
    ." CAR YELLOW " CR
    GREEN CAR GPIO OFF YELLOW CAR GPIO ON WAIT_TIME DELAY  
    ." PEDESTRIAN GREEN " CR
    RED CAR GPIO ON YELLOW CAR GPIO OFF RED PEDESTRIAN OFF GREEN PEDESTRIAN ON WAIT_TIME DELAY  
;

\ CHECK ( n -- ) busy wait until GPIO level passed as input is up and then start SEMAPHORE_ROUTINE
: CHECK ." Waiting for input... " CR BEGIN DUP GPIO LEVEL 0= UNTIL DROP SEMAPHORE_ROUTINE ;

: MAIN INIT_STATE BUTTON CHECK ;

INIT_OUTPUT

MAIN
